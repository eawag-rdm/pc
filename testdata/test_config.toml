#####################################################################################
# README
# ------
# Sections are function names
#
# Settings are contained in lists each list entry represents one function call.
#
# Within setting function arguments are defined.
#
# For each function (section) a whitelist and a blacklist can be defined.
# Blacklist: filepaths that match any of the balcklist entries are skipped. Regex patterns are allowed. Ignored, if empty.
# Whitelist: Only filepaths, that match entries will be checked. Regex patterns are allowed. Ignored, if empty.
#####################################################################################


[operation.main]
collector = "LocalCollector"

[test.HasOnlyASCII]
# Checking for white spaces in folder and file names.
blacklist = ["test.txt"]
whitelist = []

[test.IsFreeOfKeywords]
# Checking file contents
blacklist = []
whitelist = ["b"]
keywordArguments = [
    { keywords = ["user", "id_rsa", "password"], info = "Possible credentials in file" },
    { keywords = "Q:", info = "Possible internal information in file" },
    { keywords = ["/Users/"], info = "Do you have hardcoded filepaths in your files?  Found suspicious keyword(s):" }
]

[test.IsValidName]
# Checking for invalid files and folders
blacklist = []
whitelist = []
keywordArguments = [
    { disallowed_names = [ 
        ".Rhistory", ".RData",
        ".Rapp.history", ".Ruserdata", 
        ".Rbuildignore", "__pycache__", ".vscode", 
        ".ipynb_checkpoints", "venv", ".idea", ".egg-info", 
        ".pytest_cache", ".pyc", ".tox", ".python_version", 
        ".coverage", ".benchmark"
    ]}
]

[collector.CkanCollector]
attrs = {url = "https://example.com", token = "", ckan_storage_path = "/nfsmount/ckan/default"}

[collector.LocalCollector]
attr = {includeFolders = true}
