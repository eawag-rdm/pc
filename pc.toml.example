#####################################################################################
# README
# ------
# Sections are function names
#
# Settings are contained in lists each list entry represents one function call.
#
# Within setting function arguments are defined.
#
# For each function (section) a whitelist and a blacklist can be defined.
#
# REGEX USAGE RULES:
# ==================
# 
# REGEX PATTERNS ARE ALLOWED IN:
# - blacklist: File paths that match these patterns are skipped
# - whitelist: Only file paths that match these patterns are checked
#
# Examples of valid regex patterns for blacklist/whitelist:
# - "test\.txt"           (matches test.txt exactly)
# - ".*\.log$"            (matches any .log file)
# - "temp.*"              (matches files starting with "temp")
# - "test[0-9]+\.txt"     (matches test1.txt, test2.txt, etc.)
#
# REGEX PATTERNS ARE NOT ALLOWED IN:
# - keywords: These are literal strings only, matched case-insensitively
# - disallowed_names: These are literal strings only
#
# Examples of valid literal strings for keywords:
# - "password"            (matches "password", "Password", "PASSWORD")
# - "api_key"             (matches "api_key", "API_KEY", etc.)
# - "/Users/"             (matches the literal string "/Users/")
# - "Q:"                  (matches the literal string "Q:")
#
# DO NOT USE regex patterns in keywords like:
# - "pass.*"              (will look for literal "pass.*" not regex)
# - "[Pp]assword"         (will look for literal "[Pp]assword")
#
#####################################################################################

[general]
# Maximum number of messages of the same type before truncating
maxMessagesPerType = 10
# Maximum size for individual files in archives (bytes) - 10MB default
maxArchiveFileSize = 10485760
# Maximum total memory for archive processing (bytes) - 100MB default
maxTotalArchiveMemory = 104857600

[operation.main]
collector = "LocalCollector"

[test.HasOnlyASCII]
# Checking for white spaces in folder and file names.
blacklist = []
whitelist = []

[test.HasNoWhiteSpace]
# Checking for Non-ASCII characters in folder and file names.
blacklist = []
whitelist = []

[test.IsFreeOfKeywords]
# Checking file contents for sensitive information
# blacklist/whitelist: Use regex patterns to include/exclude files by path
blacklist = []
whitelist = []
# keywords: Use literal strings only (case-insensitive matching)
keywordArguments = [
    { keywords = ["pwd","password","token", "id_rsa", "id_ed25519"], info = "Sensitive data in File? Found suspicious keyword(s):" },
    { keywords = ["Q:"], info = "Do you have Eawag internal information in your files?  Found suspicious keyword(s):" },
    { keywords = ["/Users/"], info = "Do you have hardcoded filepaths in your files?  Found suspicious keyword(s):" }
]

[test.IsValidName]
# Checking for invalid files and folders
# blacklist/whitelist: Use regex patterns to include/exclude files by path
blacklist = []
whitelist = []
# disallowed_names: Use literal strings only (exact filename matching)
keywordArguments = [
    { disallowed_names = [ 
        ".Rhistory", ".RData",
        ".Rapp.history", ".Ruserdata", 
        ".Rbuildignore", "__pycache__", ".vscode", 
        ".ipynb_checkpoints", "venv", ".idea", ".egg-info", 
        ".pytest_cache", ".pyc", ".tox", ".python_version", 
        ".coverage", ".benchmark", ".doc", ".xls"
    ]}
]

[collector.CkanCollector]
attrs = {url = "https://example.com", token = "", verify = true, ckan_storage_path = "/nfsmount/ckan/default"}

[collector.LocalCollector]
attrs = {includeFolders = true}
